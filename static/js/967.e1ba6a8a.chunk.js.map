{"version":3,"file":"static/js/967.e1ba6a8a.chunk.js","mappings":"uKACA,MAA4B,2BAA5B,EAAiE,yBAAjE,EAAgG,4C,UCWhG,EAVgB,SAAHA,GAAwC,IAAlCC,EAAOD,EAAPC,QAASC,EAAIF,EAAJE,KAAIC,EAAAH,EAAEI,IAAAA,OAAG,IAAAD,GAAQA,EAC3C,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC5BC,EAAAA,EAAAA,MAAA,KAAGH,UAAWF,EAAMG,EAAUA,EAAYC,SAAA,CACvCP,EAAQ,IAAEC,MAInB,C,oICTA,EAA4B,8BAA5B,EAAkE,0BAAlE,EAAmG,yBAAnG,EAAoI,0BAApI,EAAsK,0B,UCyEtK,EApEkB,SAAHF,GAAoB,IAAfU,EAAQV,EAARU,SACZC,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGZC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIL,IAAgBM,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAc,SAAAC,GAClB,IAAAC,EAAwBD,EAAME,OAAtBC,EAAIF,EAAJE,KAEFC,EAFaH,EAALI,MAIdP,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAS,EAAAA,EAAAA,GAAA,GACPH,EAAOC,IAEZ,EAQMG,EAAQ,WACZT,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIL,GAChB,EAEMmB,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,SAEXnB,EAAoBO,EAApBP,MAAOC,EAAaM,EAAbN,SAEf,OACEJ,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAcC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAUC,SAAC,gBAC1BC,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAUG,SAlBV,SAAAY,GACnBA,EAAMW,iBACNvB,GAAQM,EAAAA,EAAAA,GAAC,CAAC,EAAIG,IACdU,GACF,EAcsDrB,SAAA,EAChDC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAW2B,QAASJ,EAAQtB,SAAA,CAAC,UAE7CH,EAAAA,EAAAA,KAAA,SACEsB,MAAOf,EACPuB,SAAUd,EACVf,UAAWC,EACX6B,KAAK,QACLX,KAAK,QACLY,GAAIP,EACJQ,UAAQ,QAGZ7B,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAW2B,QAASF,EAAWxB,SAAA,CAAC,YAEhDH,EAAAA,EAAAA,KAAA,SACEsB,MAAOd,EACPsB,SAAUd,EACVf,UAAWC,EACX6B,KAAK,WACLX,KAAK,WACLY,GAAIL,EACJM,UAAQ,QAGZjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACC,MAAM,UAAUJ,KAAK,gBAIrC,E,wCC3CA,EApBkB,WAChB,IAAMK,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MAMjB,OACEtC,EAAAA,EAAAA,MAAAuC,EAAAA,SAAA,CAAAxC,SAAA,CACGiC,IAAepC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,IACtBL,IACCvC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,CAACjD,QAAS2C,EAAWxC,KAAG,EAACF,KAAK,4BAEtCuC,IAAepC,EAAAA,EAAAA,KAAC8C,EAAS,CAACzC,SAVX,SAAA0C,GACnBN,GAASO,EAAAA,EAAAA,IAAMD,GACjB,MAWF,C","sources":["webpack://react-homework-template/./src/components/Message/message.module.css?cfee","components/Message/Message.jsx","webpack://react-homework-template/./src/components/LoginForm/login-form.module.css?1212","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"message_container__M7F7E\",\"message\":\"message_message__6rTNs\",\"red\":\"message_red__ZkXFs message_message__6rTNs\"};","import css from './message.module.css';\n\nconst Message = ({ message, text, red = false }) => {\n  return (\n    <div className={css.container}>\n      <p className={red ? css.red : css.message}>\n        {message} {text}\n      </p>\n    </div>\n  );\n};\n\nexport default Message;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"login-form_container__KlcvQ\",\"title\":\"login-form_title__nnOxE\",\"info\":\"login-form_info__GQx5W\",\"label\":\"login-form_label__jgvs-\",\"field\":\"login-form_field__jcqJq\"};","import { useState, useId } from 'react';\n\nimport Button from '../Button/Button';\n\nimport css from './login-form.module.css';\n\nconst LoginForm = ({onSubmit}) => {\n  const INITIAL_STATE = {\n    email: '',\n    password: '',\n  };\n\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleInput = event => {\n    const { name, value } = event.target;\n\n    const newValue = value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { email, password } = state;\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Login form</h2>\n      <form className={css.info} onSubmit={handleSubmit}>\n        <label className={css.label} htmlFor={emailId}>\n          E-mail\n          <input\n            value={email}\n            onChange={handleInput}\n            className={css.field}\n            type=\"email\"\n            name=\"email\"\n            id={emailId}\n            required\n          />\n        </label>\n        <label className={css.label} htmlFor={passwordId}>\n          Password\n          <input\n            value={password}\n            onChange={handleInput}\n            className={css.field}\n            type=\"password\"\n            name=\"password\"\n            id={passwordId}\n            required\n          />\n        </label>\n        <Button title=\"Sign In\" type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport Loader from 'components/Loader/Loader';\nimport Message from 'components/Message/Message';\n\nimport { login } from '../../redux/auth/auth-operations';\nimport { selectError, selectIsLoading } from '../../redux/auth/auth-selectors';\n\nconst LoginPage = () => {\n  const authLoading = useSelector(selectIsLoading);\n  const authError = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  const handleSighIn = body => {\n    dispatch(login(body));\n  };\n\n  return (\n    <>\n      {authLoading && <Loader />}\n      {authError && (\n        <Message message={authError} red text=\". Please, Try again...\" />\n      )}\n      {!authLoading && <LoginForm onSubmit={handleSighIn} />}\n    </>\n  );\n};\nexport default LoginPage;\n"],"names":["_ref","message","text","_ref$red","red","_jsx","className","css","children","_jsxs","onSubmit","INITIAL_STATE","email","password","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleInput","event","_event$target","target","name","newValue","value","_defineProperty","reset","emailId","useId","passwordId","preventDefault","htmlFor","onChange","type","id","required","Button","title","authLoading","useSelector","selectIsLoading","authError","selectError","dispatch","useDispatch","_Fragment","Loader","Message","LoginForm","body","login"],"sourceRoot":""}