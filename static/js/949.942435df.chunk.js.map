{"version":3,"file":"static/js/949.942435df.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/ContactList/contactlist.module.css?f7cc","components/ContactList/Filter.jsx","webpack://react-homework-template/./src/components/Modal/modal.module.css?1a55","webpack://react-homework-template/./src/components/ChangeContactForm/change-contact-form.module.css?08c5","components/ChangeContactForm/ChangeContactForm.jsx","components/Modal/Modal.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Notification/notification.module.css?d212","components/Notification/Notification.jsx","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["export const selectAllNames = store => store.contacts;\n\nexport const selectFilteredContacts = store => {\n  const { contacts:{items}, filter } = store;\n  if (!filter) {\n    return items;\n  }\n  const filterLowerCase = filter.toLowerCase();\n\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(filterLowerCase)\n  );\n};\n\n","export const selectFilter = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contactlist_container__iOKDP\",\"title\":\"contactlist_title__SYcd+\",\"filter\":\"contactlist_filter__iPkqI\",\"field\":\"contactlist_field__5ya5R\",\"list\":\"contactlist_list__f43fc\",\"item\":\"contactlist_item__ziseb\",\"text\":\"contactlist_text__SLOST\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectFilter } from '../../redux/filter/filter-selectors';\nimport { setFilter } from '../../redux/filter/filter-slice';\n\nimport css from './contactlist.module.css';\n\nconst Filter = () => {\n  const {filter} = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n  \n  const onChange = event => {\n    return dispatch(setFilter(event.currentTarget.value));\n  };\n  return (\n    <label className={css.filter}>\n      Find contacts by name\n      <input\n        className={css.field}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"modal_overlay__fCMjT\",\"modal\":\"modal_modal__Nszx8\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"change-contact-form_container__-S+IE\",\"title\":\"change-contact-form_title__d5CpJ\",\"info\":\"change-contact-form_info__pWG1S\",\"label\":\"change-contact-form_label__EHQV-\",\"field\":\"change-contact-form_field__0Gorm\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { changeContact } from '../../redux/contacts/contacts-operations';\nimport Button from '../Button/Button';\n\nimport css from './change-contact-form.module.css';\n\nconst ChangeContactForm = ({ contact }) => {\n  const [name, setName] = useState(contact[0].name);\n  const [number, setNumber] = useState(contact[0].number);\n  const { id } = contact[0];\n\n  const dispatch = useDispatch();\n\n  const handleInput = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleChangeName = event => {\n    event.preventDefault();\n    const data = { id, name, number };\n    dispatch(changeContact(data));\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Change Contact</h2>\n      <form className={css.info} onSubmit={handleChangeName}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.field}\n            type=\"text\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={handleInput}\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            className={css.field}\n            type=\"tel\"\n            name=\"number\"\n            required\n            value={number}\n            onChange={handleInput}\n          />\n        </label>\n        <Button title=\"Change contact\" type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default ChangeContactForm;\n","import { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport css from './modal.module.css';\nimport ChangeContactForm from '../ChangeContactForm/ChangeContactForm';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, contact }) {\n  const closeModal = useCallback(\n    ({target, currentTarget, code}) => {\n      if (code === 'Escape' || currentTarget === target) {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', closeModal);\n    return () => window.removeEventListener('keydown', closeModal);\n  }, [closeModal]);\n\n\n  return createPortal(\n    <div className={css.overlay} onClick={closeModal}>\n      <div className={css.modal}>\n        <ChangeContactForm contact={ contact} />\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState } from 'react';\n\nimport { selectFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\n\nimport Filter from './Filter';\nimport Modal from '../Modal/Modal';\n\nimport css from './contactlist.module.css';\nimport Button from '../Button/Button';\n\nconst ContactList = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [contact, setContact] = useState([]);\n\n  const items = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  const deleteContactName = event => {\n    const contactId = event.currentTarget.closest('li').id;\n    dispatch(deleteContact(contactId));\n  };\n\n  const toggleModal = useCallback(() => {\n    setShowModal(showModal => !showModal);\n  }, []);\n\n  const onHandleClick = useCallback(\n    event => {\n      const contactId = event.currentTarget.closest('li').id;\n      const contact = items.filter(item => item.id === contactId);\n      setContact(contact);\n      toggleModal();\n    },\n    [items, toggleModal]\n  );\n\n  const elements = items.map(({ name, number, id }) => (\n    <li className={css.item} key={id} id={id}>\n      <p className={css.text}>\n        {name}: {number}\n      </p>\n      <Button onClick={onHandleClick} menu title=\"Change\" type=\"button\" />\n      <Button onClick={deleteContactName} menu title=\"Delete\" type=\"button\" />\n    </li>\n  ));\n\n  return (\n    <div className={css.container}>\n      <h3 className={css.title}>Contacts</h3>\n      <Filter />\n      <ul className={css.list}>{elements}</ul>\n      {showModal && <Modal onClose={toggleModal} contact={contact} />}\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"notification_text__auTP2\"};","import css from \"./notification.module.css\"\n\nconst Notification = ({ message }) => {\n  return (\n    <div className={css.text}>{ message}</div>\n  )\n}\n\nexport default Notification;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport { selectAllNames } from '../../redux/contacts/contacts-selectors';\n\nconst ContactsPage = () => {\n  const { items, isLoading, error } = useSelector(selectAllNames);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <Notification message={error} />}\n      {!isLoading &&\n        (items.length ? (\n          <ContactList />\n        ) : (\n          <Notification message=\"There is no contacts in the Phonebook\" />\n        ))}\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["selectAllNames","store","contacts","selectFilteredContacts","items","filter","filterLowerCase","toLowerCase","contact","name","includes","selectFilter","useSelector","dispatch","useDispatch","_jsxs","className","css","children","_jsx","type","value","onChange","event","setFilter","currentTarget","_ref","_useState","useState","_useState2","_slicedToArray","setName","_useState3","number","_useState4","setNumber","id","handleInput","_event$currentTarget","onSubmit","preventDefault","data","changeContact","required","Button","title","modalRoot","document","querySelector","Modal","onClose","closeModal","useCallback","_ref2","target","code","useEffect","window","addEventListener","removeEventListener","createPortal","onClick","ChangeContactForm","showModal","setShowModal","setContact","deleteContactName","contactId","closest","deleteContact","toggleModal","onHandleClick","item","elements","map","menu","Filter","message","_useSelector","isLoading","error","fetchContacts","_Fragment","Loader","Notification","length","ContactList"],"sourceRoot":""}